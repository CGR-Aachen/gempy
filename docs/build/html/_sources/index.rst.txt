.. GeMpy documentation master file, created by
   sphinx-quickstart on Wed Dec 14 12:44:40 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to GemPy's (v 0.9) documentation!
=================================
Software for 3D structural geologic implicit modeling in Python.
**************************************************************

GemPy is an open-source tool for generating 3D structural geological models in Python.
The core algorithm is based on a universal cokriging interpolation method devised by
Lajaunie et al. (1997) and further elaborated by Calcagno et al. (2008).
This tool is capable of creating complex 3D geological models,
including stratigraphic and structural features such as:

- fold structures (e.g.: anticlines, synclines)
- fault networks and fault-layer interactions
- unconformities

GemPy's code can be viewed in its repository: https://github.com/cgre-aachen/GeMpy.

Results from modeling with GemPy may look like this:

.. raw:: html

    <div style="margin-top:10px;">
      <iframe src="https://steno3d.com/embed/A747sS50WZZu75yEm8Yi" width="600" height="400"></iframe>
    </div>

Its implicit nature allows the user to generate complete 3D geological models through the interpolation of:

- Interfaces points: 3D points in space that delimit the different formation in a given setting.
- Foliations: Measurements of the poles (perpendicular to the layer) at any point in the 3D space.

.. image:: ./images/input_example.png

In addition to the interpolation GeMpy has been created with the idea of perform Bayesian Inferences in geological modeling (de la Varga and Wellmann, 2016). Due to this, the whole interpolation algorithm has been written in the optimization packge theano (http://deeplearning.net/software/theano/) what allows the computation of gradients opening the door to the use of advance HMC methods coupling GeMpy and PyMC3 (https://pymc-devs.github.io/pymc3/notebooks/getting_started.html). Also, the use of theano allows the use of the GPU through cuda (see theano doc for more information).

Contents:

.. toctree::
   :maxdepth: 3

   self
   Kriging
   tutorial
   code


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
